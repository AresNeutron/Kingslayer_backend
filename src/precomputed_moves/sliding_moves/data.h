// sliding_moves_data.h

#ifndef SLIDING_MOVES_DATA_H
#define SLIDING_MOVES_DATA_H

#include <cstdint> // Para uint64_t
#include <array>   // Para std::array
#include <vector>  // Para std::vector


// Estos números serán usados para indexar las tablas de ataque.
constexpr std::array<uint64_t, 64> ROOK_MAGICS = {
    0x8a80104000800020ULL, 0x140002000100040ULL, 0x2801880a0017001ULL, 0x100081001000420ULL,
    0x200020010080420ULL, 0x3001c0002010008ULL, 0x8480008002000100ULL, 0x2080088004402900ULL,
    0x800098204000ULL, 0x2024401000200040ULL, 0x100802000801000ULL, 0x120800800801000ULL,
    0x208808004000800ULL, 0x2802200800400ULL, 0x2200800100020080ULL, 0x801000060821100ULL,
    0x80044006422000ULL, 0x100808020004000ULL, 0x12108a0010204200ULL, 0x140848010000802ULL,
    0x481828014002800ULL, 0x8094004002004100ULL, 0x4010040010010802ULL, 0x20008806104ULL,
    0x100400080208000ULL, 0x2040002120081000ULL, 0x21200680100081ULL, 0x20100080080080ULL,
    0x2000a00200410ULL, 0x20080800400ULL, 0x80088400100102ULL, 0x80004600042881ULL,
    0x4040008040800020ULL, 0x440003000200801ULL, 0x4200011004500ULL, 0x188020010100100ULL,
    0x14800401802800ULL, 0x2080040080800200ULL, 0x124080204001001ULL, 0x200046502000484ULL,
    0x480400080088020ULL, 0x1000422010034000ULL, 0x30200100110040ULL, 0x100021010009ULL,
    0x2002080100110004ULL, 0x202008004008002ULL, 0x20020004010100ULL, 0x2048440040820001ULL,
    0x101002200408200ULL, 0x40802000401080ULL, 0x4008142004410100ULL, 0x2060820c0120200ULL,
    0x1001004080100ULL, 0x20c020080040080ULL, 0x2935610830022400ULL, 0x44440041009200ULL,
    0x280001040802101ULL, 0x2100190040002085ULL, 0x80c0084100102001ULL, 0x4024081001000421ULL,
    0x20030a0244872ULL, 0x12001008414402ULL, 0x2006104900a0804ULL, 0x1004081002402ULL
};

constexpr std::array<uint64_t, 64> BISHOP_MAGICS = {
    5603410226046412600ULL,  18234595882143263872ULL, 7217323810901065693ULL,  6617245806631585377ULL,
    16412233072203748223ULL, 13156056852447939345ULL, 16143386463527305230ULL, 9155076430901801984ULL,
    72625875388817916ULL,    9279814441850871788ULL,  9223935967629051959ULL,  4611430739131216802ULL,
    16069413293399739576ULL, 5764521582934000672ULL,  14411394627341721541ULL, 4035845240741334528ULL,
    13576036256121340720ULL, 6989640616929966516ULL,  18446723093645934325ULL, 9223382873278906000ULL,
    13835062736621748963ULL, 12970376033164326144ULL, 261709551065984ULL,      1441585427555274240ULL,
    6916061958834705456ULL,  9232795371192628272ULL,  576464726239997260ULL,   18446737919999768644ULL,
    9222942078433614336ULL,  12227272936637464611ULL, 16690719550404062048ULL, 17866249826303869024ULL,
    6306746953159890848ULL,  16603736086957202864ULL, 3387832834925380640ULL,  5044026868374678528ULL,
    5580739646675162880ULL,  15411816213555853312ULL, 13548861586122997856ULL, 17552793673140174336ULL,
    2701351918804520192ULL,  6917519707617958240ULL,  7116882394058844160ULL,  13269125049982097408ULL,
    16384396387345497088ULL, 13091701843749996288ULL, 11886998901016232960ULL, 15647905684950747680ULL,
    17076123125294747392ULL, 5140923654978049024ULL,  13467584264583152896ULL, 11072425050661999680ULL,
    1399359582794393920ULL,  14697310374356846080ULL, 1585438352770172944ULL,  14557192088980946960ULL,
    12249878676311685957ULL, 16739315623254294789ULL, 13104296234804298083ULL, 16103680809196970407ULL,
    17265703666216497635ULL, 13528250181494197569ULL, 3461194999075843072ULL,  12429843139948337776ULL
};

extern std::array<uint64_t, 64> rook_masks;
extern std::array<uint64_t, 64> bishop_masks;


extern std::array<int, 64> rook_magic_shifts;
extern std::array<int, 64> bishop_magic_shifts;


extern std::array<int, 64> rook_magic_offsets;
extern std::array<int, 64> bishop_magic_offsets;


extern std::vector<uint64_t> rook_magic_attack_table;
extern std::vector<uint64_t> bishop_magic_attack_table;

// Function used to populate the tables of moves
void generate_magic_bitboards();

#endif // MAGIC_BITBOARD_DATA_H